#!/usr/bin/env ruby
# coding: utf-8

class CreditCartBilling
  attr_reader :file

  def initialize file
    @file = file
  end

  def transform_to(new_file)
    name = "Willian"
    target = File.open(new_file, "w")

    File.readlines(file).each do |line|
      bl   = BillingLine.new(line)
      name = bl.parse_name if bl.name?

      target.puts bl.transform(name) if bl.debt?
    end

    target.close
  end
end

class BillingLine
  POTHIX = "WILLIAN ARAUJO MOLINARI"
  JACQUE = "JACQUELINE AP DE ASSIS TE"
  DFTYPE = "Cartao"

  attr_reader :line

  def initialize(line)
    @line = line
  end

  def debt?
    !!(line.match(%r/[0-9]{2}\/[0-9]{2}.*[A-Z ]+[0-9]+,[0-9]{2}$/))
  end

  def parse_debt
    linefmt = {date: "", place: "", value: ""}

    splitted = line.split
    linefmt[:value] = splitted.pop.gsub(/,/, ".")

    date = splitted.shift
    date = date.split("/")
    date = "#{Time.now.year}-#{date.last}-#{date.first}"

    linefmt[:date]  = date
    linefmt[:place] = splitted.join(" ")

    linefmt
  end

  def transform(who)
    fmt = parse_debt
    "#{fmt[:place]}\t#{DFTYPE}\t#{fmt[:date]}\t#{fmt[:value]}\t#{who}\tCartão de crédito"
  end

  def name?
    !!(line.match(/#{POTHIX}.*/) || @line.match(/#{JACQUE}.*/))
  end

  def parse_name
    line.split.first.capitalize
  end
end

file = ARGV[0] || "cartao.txt"
c = CreditCartBilling.new(file)

splitted = file.split("/")
splitted.pop
splitted << "#{Time.now.year}-#{Time.now.month}-#{Time.now.day}.csv"

output = splitted.join("/")
c.transform_to(output)
